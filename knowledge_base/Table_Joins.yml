# YAML Version Specification
version: 2.0

# ----------------------------------------------------------------------------
# KNOWLEDGE BASE DOCUMENTATION FOR LLM
# ----------------------------------------------------------------------------
# This document serves as a semantic layer and comprehensive knowledge base.
# It details the schemas and logical relationships for critical tables
# within the Customer Support and Client Experience data domains. It is intended
# to be used by an LLM to understand data context, column-level semantics,
# and the correct methodology for constructing valid and meaningful SQL join queries.
#
# The file is structured into two main parts:
# 1. Models: Detailed definitions of each table, its purpose, granularity,
#    and key columns.
# 2. Relationships: Explicit definitions of the join paths between these
#    models, including the logical reasoning behind each join.
#
# Generated on: Thursday, June 19, 2025
# Author: Gemini Language Model
# ----------------------------------------------------------------------------

models:
    # --------------------------------------------------------------------------
    # MODEL 1: dim_ticket_summary (Central Ticket Table)
    # --------------------------------------------------------------------------
  - name: client_experience.dim_ticket_summary
    description: |
      This is a wide, denormalized dimension table that represents the single source of truth for a support ticket.
      Each row corresponds to one unique support ticket, identified by 'ticket_id'. It contains a rich set of attributes
      describing the ticket's entire lifecycle, from creation to resolution, the channels used, the agent(s) involved,
      categorization tags, and associated client satisfaction (CSAT/CES) scores. It also includes details about the client
      at the time they created the ticket. This table is the central object for analyzing support volumes, resolution times,
      and overall ticket-level performance.
    meta:
      owner: client_experience_team
      source_system: Zendesk (Primary), Jira, Internal ML Models (ERNIE)
      update_frequency: Daily
      granularity: One row per ticket_id
    columns:
      - name: ticket_id
        description: "The unique, numeric primary key for the support ticket. Originates from the Zendesk system. This is the central identifier for joining all ticket-related data."
        tests: [unique, not_null]
      - name: cs_agent_id
        description: "The unique numeric identifier (bigint) of the CS agent who last solved or is currently assigned to the ticket. This is a crucial foreign key. Note the data type requires casting to VARCHAR to join with dim_cs_agent_scorecard.zendesk_user_id."
      - name: first_forwarded_cs_agent_id
        description: "The unique identifier (varchar) of the first agent a ticket was forwarded or transferred to. This is very useful for analyzing escalations and first-touch resolution. This key can be directly joined to dim_cs_agent_scorecard.zendesk_user_id without casting."
      - name: requester_identity_canonical_id
        description: "A unique canonical string identifier for the client who initiated the ticket. This is the master client ID and should be used to join with other models to track a client's full journey."
      - name: ticket_created_at
        description: "A timestamp recording when the ticket was created. This should be CAST to a DATE to join with daily summary tables."
      - name: first_solved_at
        description: "A timestamp recording the first time the ticket's status was set to 'solved'. This is a key metric for performance analysis and should be CAST to a DATE for joining with daily scorecards."
      - name: channel
        description: "The channel through which the ticket was created (e.g., 'Chat', 'Phone', 'Web')."

    # --------------------------------------------------------------------------
    # MODEL 2: dim_cs_agent_scorecard (Agent Daily Performance)
    # --------------------------------------------------------------------------
  - name: dim_cs_agent_scorecard
    description: |
      This table is a daily performance summary for each customer service agent. Each row represents one agent's
      aggregated metrics for a single day ('summary_date'). It includes data on tickets solved, handle times,
      client satisfaction responses, adherence to schedule, and QA scores. The primary key is a composite of the agent's ID
      and the summary date. This table is essential for all reporting related to agent efficiency, quality, and productivity.
    meta:
      owner: client_experience_team
      source_system: Zendesk, Playvox, Tymeshift, Level AI, MaestroQA
      update_frequency: Daily
      granularity: One row per agent per day
    columns:
      - name: zendesk_user_id
        description: "The unique user identifier for the agent from Zendesk, stored as a string (varchar). This is the primary key component for the agent and is used to join with ticket and chat data."
        tests: [not_null]
      - name: summary_date
        description: "The specific date for which the performance metrics are aggregated. It is the second component of the composite primary key. It must be joined against other tables by casting their timestamp columns to DATE."
        tests: [not_null]
      - name: cs_agent
        description: "The full name of the customer service agent. Primarily for display and reporting purposes."

    # --------------------------------------------------------------------------
    # MODEL 3: dim_agent_history (Agent Organizational History)
    # --------------------------------------------------------------------------
  - name: dim_agent_history
    description: |
      This table contains the historical records of an agent's organizational role, including their manager, team lead, and position.
      It uses effective dating (`effective_from`, `effective_to`) to track changes over time. Each row represents a period during which an agent's details were constant.
    meta:
      owner: workforce_management_team
      source_system: HR System, Playvox
      update_frequency: Daily
      granularity: One row per agent per effective date range
    columns:
      - name: zendesk_user_id
        description: "The agent's unique Zendesk ID, serving as a foreign key to join with ticket and scorecard data."
      - name: effective_from
        description: "The timestamp when this historical record became active."
      - name: effective_to
        description: "The timestamp when this historical record became inactive."
      - name: manager
        description: "The name of the agent's manager during this period."
      - name: team_lead
        description: "The name of the agent's team lead during this period."

    # --------------------------------------------------------------------------
    # MODEL 4: dim_csats (Customer Feedback)
    # --------------------------------------------------------------------------
  - name: dim_csats
    description: |
      Contains individual customer satisfaction (CSAT) and customer effort score (CES) survey responses. Each row is one survey response, linked to a specific ticket.
      Sources can include Zendesk, Typeform, and Ada.
    meta:
      owner: client_experience_team
      source_system: Zendesk, Typeform, Ada
      update_frequency: Near Real-time
      granularity: One row per survey response
    columns:
      - name: id
        description: "The unique primary key for the survey response."
        tests: [unique, not_null]
      - name: ticket_id
        description: "The foreign key that links the survey response back to the support ticket."
        tests: [not_null]
      - name: csat_score_given
        description: "The raw numerical score given by the customer."
      - name: ces_score_given
        description: "The raw customer effort score given, typically on a 1-7 scale."

    # --------------------------------------------------------------------------
    # MODEL 5: dim_ticket_jira_issues (Jira Linkage)
    # --------------------------------------------------------------------------
  - name: dim_ticket_jira_issues
    description: |
      A mapping table that links Zendesk tickets to one or more Jira issues. This is critical for tracking escalations to engineering and product teams.
    meta:
      owner: engineering_operations
      source_system: Jira, Zendesk
      update_frequency: Hourly
      granularity: One row per ticket-Jira issue link
    columns:
      - name: ticket_id
        description: "The identifier of the Zendesk ticket."
        tests: [not_null]
      - name: jira_issue_key
        description: "The unique key of the linked Jira issue (e.g., 'PROJ-123')."
        tests: [not_null]

# ----------------------------------------------------------------------------
# RELATIONSHIP DEFINITIONS
# ----------------------------------------------------------------------------
# This section explicitly defines the logical joins between the models.
# Each entry describes the purpose of the join and its technical implementation.
# ----------------------------------------------------------------------------
relationships:
  - name: enrich_tickets_with_solver_daily_performance
    description: |
      This join connects a ticket from `dim_ticket_summary` to the daily performance scorecard of the agent who **solved** it.
      The purpose is to analyze ticket outcomes (like CSAT or resolution time) in the context of the agent's overall performance
      and workload on that specific day. For example, 'Did tickets solved on a day with high handle time receive lower CSAT scores?'.
    join_type: left
    from_model: client_experience.dim_ticket_summary
    to_model: dim_cs_agent_scorecard
    on: |
      CAST(client_experience.dim_ticket_summary.cs_agent_id AS VARCHAR) = dim_cs_agent_scorecard.zendesk_user_id
      AND CAST(client_experience.dim_ticket_summary.first_solved_at AS DATE) = CAST(dim_cs_agent_scorecard.summary_date AS DATE)

  - name: enrich_tickets_with_agent_historical_context
    description: |
      Connects a ticket to the agent's organizational details (manager, team lead) at the time the ticket was **created**.
      This provides a point-in-time snapshot of the agent's role, crucial for cohort analysis based on team structure or tenure.
    join_type: left
    from_model: client_experience.dim_ticket_summary
    to_model: dim_agent_history
    on: |
      CAST(client_experience.dim_ticket_summary.cs_agent_id AS VARCHAR) = dim_agent_history.zendesk_user_id
      AND client_experience.dim_ticket_summary.ticket_created_at >= dim_agent_history.effective_from
      AND client_experience.dim_ticket_summary.ticket_created_at < dim_agent_history.effective_to

  - name: link_tickets_to_customer_feedback
    description: |
      This join attaches customer satisfaction (CSAT) and effort (CES) scores directly to the tickets they are associated with.
      This is the primary method for measuring customer sentiment related to a specific support interaction. A left join is
      essential because the vast majority of tickets do not receive a survey response.
    join_type: left
    from_model: client_experience.dim_ticket_summary
    to_model: dim_csats
    on: |
      client_experience.dim_ticket_summary.ticket_id = dim_csats.ticket_id

  - name: identify_tickets_escalated_to_engineering
    description: |
      This join connects support tickets to their corresponding engineering tasks in Jira. It is used to track bugs, feature requests,
      and other issues that require engineering intervention. Since a ticket can be linked to multiple Jira issues, this can be a one-to-many join.
    join_type: left
    from_model: client_experience.dim_ticket_summary
    to_model: dim_ticket_jira_issues
    on: |
      client_experience.dim_ticket_summary.ticket_id = dim_ticket_jira_issues.ticket_id
